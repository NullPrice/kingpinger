// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/pinger/pinger.go

// Package mock_pinger is a generated GoMock package.
package mock_pinger

import (
	reflect "reflect"

	pinger "github.com/NullPrice/kingpinger/pkg/pinger"
	gomock "github.com/golang/mock/gomock"
)

// MockAdapter is a mock of Adapter interface
type MockAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockAdapterMockRecorder
}

// MockAdapterMockRecorder is the mock recorder for MockAdapter
type MockAdapterMockRecorder struct {
	mock *MockAdapter
}

// NewMockAdapter creates a new mock instance
func NewMockAdapter(ctrl *gomock.Controller) *MockAdapter {
	mock := &MockAdapter{ctrl: ctrl}
	mock.recorder = &MockAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAdapter) EXPECT() *MockAdapterMockRecorder {
	return m.recorder
}

// ProcessResult mocks base method
func (m *MockAdapter) ProcessResult() {
	m.ctrl.Call(m, "ProcessResult")
}

// ProcessResult indicates an expected call of ProcessResult
func (mr *MockAdapterMockRecorder) ProcessResult() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessResult", reflect.TypeOf((*MockAdapter)(nil).ProcessResult))
}

// SetResult mocks base method
func (m *MockAdapter) SetResult(x pinger.Result) {
	m.ctrl.Call(m, "SetResult", x)
}

// SetResult indicates an expected call of SetResult
func (mr *MockAdapterMockRecorder) SetResult(x interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetResult", reflect.TypeOf((*MockAdapter)(nil).SetResult), x)
}

// GetResult mocks base method
func (m *MockAdapter) GetResult() pinger.Result {
	ret := m.ctrl.Call(m, "GetResult")
	ret0, _ := ret[0].(pinger.Result)
	return ret0
}

// GetResult indicates an expected call of GetResult
func (mr *MockAdapterMockRecorder) GetResult() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResult", reflect.TypeOf((*MockAdapter)(nil).GetResult))
}

// SetPingRequest mocks base method
func (m *MockAdapter) SetPingRequest(x pinger.PingRequest) {
	m.ctrl.Call(m, "SetPingRequest", x)
}

// SetPingRequest indicates an expected call of SetPingRequest
func (mr *MockAdapterMockRecorder) SetPingRequest(x interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPingRequest", reflect.TypeOf((*MockAdapter)(nil).SetPingRequest), x)
}

// GetPingRequest mocks base method
func (m *MockAdapter) GetPingRequest() pinger.PingRequest {
	ret := m.ctrl.Call(m, "GetPingRequest")
	ret0, _ := ret[0].(pinger.PingRequest)
	return ret0
}

// GetPingRequest indicates an expected call of GetPingRequest
func (mr *MockAdapterMockRecorder) GetPingRequest() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPingRequest", reflect.TypeOf((*MockAdapter)(nil).GetPingRequest))
}
